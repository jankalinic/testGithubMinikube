name: Greeting on variable day

on:
  pull_request:
    branches:
      - main

env:
  TARGET_NAMESPACE: console-namespace
jobs:
  test_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.2.1/yq_linux_amd64 > yq && chmod +x yq
          sudo cp -v yq /usr/bin/

      - name: Start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          cpus: 4
          memory: 4096m

      - name: Enable ingress
        run: minikube addons enable ingress && minikube addons enable ingress-dns

      - name: Export IP
        run: echo "CLUSTER_DOMAIN=$(minikube ip)" >> $GITHUB_ENV

      - name: Show IP
        run: echo $CLUSTER_DOMAIN

      - name: Create namespace
        run: kubectl create namespace $TARGET_NAMESPACE

      - name: Install Strimzi
        run: kubectl create -f https://strimzi.io/install/latest?namespace=$TARGET_NAMESPACE -n $TARGET_NAMESPACE

      - name: Wait for Strimzi
        run: kubectl wait deployment/strimzi-cluster-operator --for=condition=available --timeout=180s -n $TARGET_NAMESPACE

      - name: Show pods
        run: kubectl get pods -n $TARGET_NAMESPACE

      - name: Prometheus Operator deployment
        run: kubectl create -f 'https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/bundle.yaml'

      - name: Prometheus get crds
        run: kubectl get crd prometheuses.monitoring.coreos.com

      - name: Show pods
        run: kubectl get pods -n $TARGET_NAMESPACE

      - name: Show deployments
        run: kubectl get deployments -n $TARGET_NAMESPACE

      - name: Prometheus deployment
        shell: bash
        run: ./install/001-deploy-prometheus.sh $TARGET_NAMESPACE $CLUSTER_DOMAIN ci

      - name: Kafka deployment
        shell: bash
        run: ./002-deploy-console-kafka.sh $TARGET_NAMESPACE $CLUSTER_DOMAIN zk

      - name: Wait for Kafka
        run: kubectl wait kafka/console-kafka --for=condition=Ready --timeout=300s -n $TARGET_NAMESPACE

      - name: Console deployment
        shell: bash
        run: | 
            sed -i 's#$USER_PASSWORD#"$(kubectl get secret console-user -o yaml | yq '.data.password' - | base64 --decode)"#g' ./install/resources/console/console-config.yaml
            sed -i 's#$CLUSTER_DOMAIN#"$TARGET_NAMESPACE"#g' ./install/resources/console/console-config.yaml
            sed -i 's#$NAMESPACE#"$CLUSTER_DOMAIN"#g' ./install/resources/console/console-config.yaml
            cat ./install/resources/console/console-config.yaml
            ./003-install-console.sh $TARGET_NAMESPACE $CLUSTER_DOMAIN ./install/resources/console/console-config.yaml

      - name: Show pods
        run: kubectl get pods -n $TARGET_NAMESPACE